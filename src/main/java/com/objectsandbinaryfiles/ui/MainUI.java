/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.objectsandbinaryfiles.ui;

import com.objectsandbinaryfiles.files.LoadFileData;
import com.objectsandbinaryfiles.files.SaveFile;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author MIDP9
 */
public class MainUI extends javax.swing.JFrame {

    EditPerson ep = null;
    TableOfPersons tp = null;
    AddPerson ap = null;
    DeleteUser du = null;
    
    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
        try {
            LoadFileData.load();
        } catch (IOException ex) {
            Logger.getLogger(MainUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dp1 = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmSavePersons = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jmSavePersonsAsCSV = new javax.swing.JMenuItem();
        omiAddPerson = new javax.swing.JMenuItem();
        showTable = new javax.swing.JMenuItem();
        omiEditPerson = new javax.swing.JMenuItem();
        omiDeleteUser = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout dp1Layout = new javax.swing.GroupLayout(dp1);
        dp1.setLayout(dp1Layout);
        dp1Layout.setHorizontalGroup(
            dp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        dp1Layout.setVerticalGroup(
            dp1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 276, Short.MAX_VALUE)
        );

        jmSavePersons.setText("Opciones");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem1.setText("Guardar Personas");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jmSavePersons.add(jMenuItem1);

        jmSavePersonsAsCSV.setText("Guardar csv de personas");
        jmSavePersonsAsCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmSavePersonsAsCSVActionPerformed(evt);
            }
        });
        jmSavePersons.add(jmSavePersonsAsCSV);

        omiAddPerson.setText("Agregar persona");
        omiAddPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                omiAddPersonActionPerformed(evt);
            }
        });
        jmSavePersons.add(omiAddPerson);

        showTable.setText("Mostrar usuarios");
        showTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showTableActionPerformed(evt);
            }
        });
        jmSavePersons.add(showTable);

        omiEditPerson.setText("Editar persona");
        omiEditPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                omiEditPersonActionPerformed(evt);
            }
        });
        jmSavePersons.add(omiEditPerson);

        omiDeleteUser.setText("Borrar usuaio");
        omiDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                omiDeleteUserActionPerformed(evt);
            }
        });
        jmSavePersons.add(omiDeleteUser);

        jMenuBar1.add(jmSavePersons);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dp1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dp1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        SaveFile.saveObjects();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jmSavePersonsAsCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmSavePersonsAsCSVActionPerformed
        SaveFile.saveAsCSV();
    }//GEN-LAST:event_jmSavePersonsAsCSVActionPerformed

    private void omiAddPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_omiAddPersonActionPerformed
        if ( ap == null || ap.isClosed() ) {
            ap = new AddPerson();
            dp1.add(ap);
        }
        ap.show();
    }//GEN-LAST:event_omiAddPersonActionPerformed

    private void showTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showTableActionPerformed
        if ( tp == null || tp.isClosed() ) {
            tp = new TableOfPersons();
            dp1.add(tp);
        }
        tp.show();
    }//GEN-LAST:event_showTableActionPerformed

    private void omiEditPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_omiEditPersonActionPerformed
        if ( ep == null || ep.isClosed() ) {
            ep = new EditPerson();
            dp1.add(ep);
        }
        ep.show();
    }//GEN-LAST:event_omiEditPersonActionPerformed

    private void omiDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_omiDeleteUserActionPerformed
        if ( du == null || du.isClosed() ) {
            du = new DeleteUser();
            dp1.add(du);
        }
        du.show();
    }//GEN-LAST:event_omiDeleteUserActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane dp1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenu jmSavePersons;
    private javax.swing.JMenuItem jmSavePersonsAsCSV;
    private javax.swing.JMenuItem omiAddPerson;
    private javax.swing.JMenuItem omiDeleteUser;
    private javax.swing.JMenuItem omiEditPerson;
    private javax.swing.JMenuItem showTable;
    // End of variables declaration//GEN-END:variables
}
